{
  "ext.displayName": "Status Bar Helper",
  "ext.description": "Create custom status bar buttons in VS Code with access to VS Code and Node.js APIs. Includes sample scripts like Log, Git, and Board, plus a visual settings panel.",
  "cmd.settings.title": "Status Bar Helper: Settings",
  "cmd.explorerAction.title": "Status Bar Helper: Trigger Action Menu",
  "cfg.title": "Status Bar Helper",
  "cfg.showGearOnStartup.desc": "Show a gear shortcut in the status bar on startup.",
  "cfg.items.desc": "Items to show in the status bar (managed by the settings panel).",

  "ext.outputChannel": "Status Bar Helper",

  "msg.migrate.successImported": "‚úÖ Status Bar Helper: Successfully imported {0} items to the new storage format",
  "msg.migrate.successMigrated": "‚úÖ Status Bar Helper: Successfully migrated {0} items to the new storage format",
  "msg.migrate.failed": "‚ö†Ô∏è Status Bar Helper: Migration failed, old settings will be preserved. See Output panel for details.",

  "err.script": "‚ùå Script error: {0}",
  "err.scriptRunOnce": "‚ùå Script error (Run Once): {0}",

  "tooltip.settings": "Status Bar Helper Settings",

  "explorerAction.noRegistrations": "No actions registered yet",
  "explorerAction.selectAction": "Select an action to run",

  "item.log.text": "$(output) Log",
  "item.log.tooltip": "VS Code + Node. Output + bottom log",
  "item.gitAdd.text": "$(diff-added) Git Add",
  "item.gitAdd.tooltip": "Stage all changes in the first workspace folder",
  "item.storage.text": "$(database) Storage",
  "item.storage.tooltip": "How to use the custom statusBarHelper API",
  "item.toggleTheme.text": "$(color-mode)",
  "item.toggleTheme.tooltip": "Toggle between light and dark theme",
  "item.board.text": "$(paintcan) Board",
  "item.board.tooltip": "Board",
  "item.pomodoro.text": "üçÖ Pomodoro",
  "item.pomodoro.tooltip": "Open Pomodoro Timer",
  "item.chatA.text": "$(comment) Chat A",
  "item.chatA.tooltip": "VM messaging demo (A) ‚Äî uses vm.open/sendMessage/onMessage",
  "item.chatB.text": "$(comment-discussion) Chat B",
  "item.chatB.tooltip": "VM messaging demo (B) ‚Äî uses vm.open/sendMessage/onMessage",

  "panel.title": "StatusBar Helper Settings",
  "export.saveLabel": "Export Settings",
  "export.success": "Settings exported successfully.",
  "import.success": "Settings imported successfully.",
  "err.import.invalidFormat": "Invalid file format.",
  "err.import.parse": "Error parsing settings file.",
  "restore.replaceDone": "Replaced with sample items.",
  "restore.appendDone": "Appended sample items (no duplicates).",
  "err.typedefs.load": "Error loading script editor type definitions. Autocomplete may not work correctly.",
  "err.run.noCommand": "Command cannot be empty for this item.",
  "err.run.startFailed": "Failed to start: {0}",
  "test.startAll": "Start all tests.",

  "log.migrate.foundNew": "Found {0} new items to migrate from settings.json (sync scenario)",
  "log.migrate.backupFailed": "Failed to backup settings:",
  "log.migrate.failed": "Migration failed:",
  "label.unknown": "Unknown",
  "err.workspaceStorageUnavailable": "workspace storage not available",
  "err.absPathNotAllowed": "absolute path not allowed",
  "err.pathEscapeRejected": "path escape rejected",
  "err.onlyBuiltinAllowed": "Only built-in modules are allowed: {0}",
  "err.execStopped": "Execution stopped",
  "err.vmOpenInvalidCmd": "vm.open: invalid cmdId",
  "err.vmOpenCmdNotFound": "vm.open: command not found or empty script: {0}",
  "err.vmOpenStartFailed": "vm.open: failed to start target: {0}",
  "err.openExternal": "Failed to open external link."
}
